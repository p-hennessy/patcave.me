<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>The Patcave</title>
    <link href="https://patcave.me/feed.xml" rel="self" />
    <link href="https://patcave.me" />
    <updated>2022-01-25T22:48:34-07:00</updated>
    <author>
        <name>Patrick Hennessy</name>
    </author>
    <id>https://patcave.me</id>

    <entry>
        <title>Today I&#x27;m officially a &quot;professional&quot; level designer!</title>
        <author>
            <name>Patrick Hennessy</name>
        </author>
        <link href="https://patcave.me/i-am-officially-a-professional-level-designer/"/>
        <id>https://patcave.me/i-am-officially-a-professional-level-designer/</id>
            <category term="Level Design"/>
            <category term="Gaming"/>

        <updated>2022-01-25T22:09:00-07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://patcave.me/media/posts/5/Pd_farmageddon.png" alt="" />
                    Okay okay, maybe that title is a bit of an overstatement, but I have very exciting news! Among my many hobbies; one I've been doing since the beginning of the pandemic is level design, specifically for the game: Team Fortress 2. I'm excited to share&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://patcave.me/media/posts/5/Pd_farmageddon.png" alt="" />
                <p>Okay okay, maybe that title is a bit of an overstatement, but I have very exciting news!</p>
<p>Among my many hobbies; one I've been doing since the beginning of the pandemic is level design, specifically for the game: Team Fortress 2.</p>
<p>I'm excited to share that today Valve purchased a level that I worked on (with a team of 8 others)!</p>
<p>Link: <a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2237224308">https://steamcommunity.com/sharedfiles/filedetails/?id=2237224308</a></p>
<h2>Farmageddon</h2>
<p>The concept of the map is that a farmer, in wanting to make the biggest pumpkin he could, gave his pumpkin radioactive sludge to make it as big as possible. It's possible that he was eaten by his creation...</p>
<p>Your job is to collect enough weed killer to kill this abomination!</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="3">
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/download.jpg" data-size="637x358"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/download-thumbnail.jpg" alt="" width="637" height="358"></a>
<figcaption>Gourdon, the pumpkin monster</figcaption>
</figure>
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/1280px-Farmageddon_RED_Grain_Shed_Outside.jpeg" data-size="1280x800"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/1280px-Farmageddon_RED_Grain_Shed_Outside-thumbnail.jpeg" alt="" width="720" height="450"></a></figure>
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/download-2.jpg" data-size="637x358"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/download-2-thumbnail.jpg" alt="" width="637" height="358"></a></figure>
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/download-1.jpg" data-size="637x358"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/download-1-thumbnail.jpg" alt="" width="637" height="358"></a>
<figcaption>Beware of the scarecrow monsters!</figcaption>
</figure>
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/Farmageddon_Inside_Pumpkin.png" data-size="1920x1080"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/Farmageddon_Inside_Pumpkin-thumbnail.png" alt="" width="720" height="405"></a>
<figcaption>Inside the pumpkin, you can find his heart</figcaption>
</figure>
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/Farmageddon_overview.png" data-size="1366x768"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/Farmageddon_overview-thumbnail.png" alt="" width="720" height="405"></a>
<figcaption>Level Overview</figcaption>
</figure>
</div></div>
<hr>
<h2>My contributions</h2>
<p>I mostly worked on some of the models, animations, particle effects and bug fixes. Below is just a small showcase of those items.</p>
<h3>Weed Killer Pickups</h3>
<p>These 2 models are the pickups you get when you kill a player:</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="4">
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5//gallery/Largeweedkiller.png" data-size="725x725"><img loading="lazy" src="https://patcave.me/media/posts/5//gallery/Largeweedkiller-thumbnail.png" alt="" width="720" height="720"></a>
<figcaption>Large Weed Killer Pickup</figcaption>
</figure>
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5//gallery/Weedkillersmall.png" data-size="725x725"><img loading="lazy" src="https://patcave.me/media/posts/5//gallery/Weedkillersmall-thumbnail.png" alt="" width="720" height="720"></a>
<figcaption>Small Weed Killer Pickup</figcaption>
</figure>
</div></div>
<p>Here is a video timelapse of the modeling and texturing process:<div class="post__iframe"><iframe loading="lazy" width="560" height="314" src="https://www.youtube.com/embed/Q1kpbwl7Lko" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></div>
<hr>
<h3 class="align-left">Pumpkin monster breathing animations</h3>
<p>Another thing I did was the pumpkin idle animations to make it feel more "alive". Before it just kinda sat there completely still, it didn't feel like it was really a monster.</p>
<p>Basically I gave the big areas some up and down movement, and added bones to each tumor to make them appear to be pulsing.</p>
<figure class="post__video"><video loading="lazy" width="300" height="150" controls="controls" data-mce-fragment="1">
<source src="https://cdn.discordapp.com/attachments/279748353343094784/886125731107700746/2021-09-10_23-46-30.mp4" type="video/mp4" /></video></figure>
<figure class="post__image post__image--left"><img loading="lazy"  src="https://cdn.discordapp.com/attachments/279748353343094784/885747187202527302/Screenshot_145.png" data-is-external-image="true"  alt="Pumpkin Monster Rig" width="1919" height="1049"></figure>
<p> </p>
<p>This was surprisingly difficult because Source engine requires the use of "bones" and each bone can rigidly deform a set of vertices near by it. Making a "rig" for basically a sphere is a bit unconventional. It works though! </p>
<p> </p>
<hr>
<h3>Pumpkin monster death effects</h3>
<p>This is the full "death" effect I did for the pumpkin monster (named "Gourdon")</p>
<figure class="post__video"><video loading="lazy" width="300" height="150" controls="controls" data-mce-fragment="1">
<source src="https://cdn.discordapp.com/attachments/823623265796751370/887521282147647528/2021-09-14_20-12-14.mp4" type="video/mp4" /></video></figure>
<p>This effect was created using a physics simulation inside of Blender along side a technique called "cell fracture" where you randomly split the model into smaller "cells". </p>
<p>Big shoutout to a Blender plugin called <a href="https://github.com/bonjorno7/SourceOps">SourceOps </a>for making it easy to import level geometry into Blender!</p>
<figure class="post__video"><video loading="lazy" width="300" height="150" controls="controls" data-mce-fragment="1">
<source src="https://cdn.discordapp.com/attachments/709803812881170607/886865559445205062/2021-09-13_00-45-54.mp4" type="video/mp4" /></video></figure>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="4">
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/Screenshot_159.png" data-size="1919x1049"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/Screenshot_159-thumbnail.png" alt="" width="720" height="394"></a>
<figcaption>Gibs</figcaption>
</figure>
<figure class="gallery__item"><a href="https://patcave.me/media/posts/5/gallery/Screenshot_153.png" data-size="1919x1049"><img loading="lazy" src="https://patcave.me/media/posts/5/gallery/Screenshot_153-thumbnail.png" alt="" width="720" height="394"></a>
<figcaption>Particle Effects</figcaption>
</figure>
</div></div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Automate All The Things!</title>
        <author>
            <name>Patrick Hennessy</name>
        </author>
        <link href="https://patcave.me/automate-all-the-things/"/>
        <id>https://patcave.me/automate-all-the-things/</id>
            <category term="Programming Stuff"/>
            <category term="Gaming"/>

        <updated>2022-01-25T22:13:01-07:00</updated>
            <summary>
                <![CDATA[
                    I have this hobby where I basically take things that I spend a lot of time with and use my coding skills to try to automate things as much as I can, particularly in the realm of the video games I play. I originally started&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>I have this hobby where I basically take things that I spend a lot of time with and use my coding skills to try to automate things as much as I can, particularly in the realm of the video games I play.</p>
<hr>
<h2>How did I start doing this?</h2>
<p>I originally started programming and doing computer stuff way back in 2009; the end of high school. I had played a lot of Diablo II at the time; and in that game, to be 'godly' you needed to get a lot of high tier items. Doing that was a <em>super </em>grind.<br><br>I had done a few things to try to "strike it rich". What I finally realized is that the botter's<br>had it right. Automate the boring stuff and focus on what you want to do. And that's what I did!<br><br>I downloaded the <a href="https://www.projectetal.com/forums/" target="_blank" rel="noopener noreferrer">D2NT </a>bot and started picking it apart. I didn't know anything about programming or software really. I watched a few tutorials on the basics of Javascript (the embedded language the bot used to control it's actions). I didn't really understand the impact of changes I made so I made a LOT of mistakes and was forced to learn how the rest of it worked. This is where I learned to debug code as well; since most of what was there was code I personally didn't write.<br><br>I did a bunch of mini projects with this botting software. One of them was a rush bot; that basically (100% automatically) went through all the quests in the game for a low level character; something that used to be very manual and time consuming. This meant I could offer it as a service and actually scale it out.</p>
<hr>
<h2>Everyone should be doing this!</h2>
<p>It feels sooo good when you complete a project like that and it makes it so you almost don't have to do anything. Not only that; but even with something small like that; I learned a TON about how computers worked. I feel very strongly that the best way to learn CS is to partake in small but not dumb projects; make it something you actually care about and can have something tangible that you use after you're done. Something you personally would actually want to use.</p>
<p>I have continued doing this ever since. So lets talk about my latest venture...</p>
<hr>
<h1 id="my-team-fortress-2-server-automation-project">Team Fortress 2 server automation project</h1>
<figure class="post__image"><img loading="lazy"  src="https://patcave.me/media/posts/1/tf2_solly.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://patcave.me/media/posts/1/responsive/tf2_solly-xs.png 300w ,https://patcave.me/media/posts/1/responsive/tf2_solly-sm.png 480w ,https://patcave.me/media/posts/1/responsive/tf2_solly-md.png 768w ,https://patcave.me/media/posts/1/responsive/tf2_solly-lg.png 1024w ,https://patcave.me/media/posts/1/responsive/tf2_solly-xl.png 1360w ,https://patcave.me/media/posts/1/responsive/tf2_solly-2xl.png 1600w"  alt="" width="1024" height="512"></figure>
<p>Easily my favorite game of all time is <a href="http://www.teamfortress.com/">Team Fortress 2</a>, I love this game so much, I could probably write an entire book on what TF2 does right.</p>
<p>So I have all these computer skills now; and one of the awesome things about Valve is they allow you to run your own servers! Not only that but there is a deep history of people modding the source engine for various things. Infact Valve literally released an <a href="https://github.com/ValveSoftware/source-sdk-2013">SDK</a> that exposes a lot of power to modders.</p>
<p>There's no way I'm not using my computer skills to make all of this stuff awesome. Basically this project is solving the problem that; I want as close to a self service competitive TF2 server than I can get.</p>
<p>Just for some context; I play on multiple competitive teams, and servers are CONSTANT pain for teams. I tried the "cheap" hosting solutions that most people do; I was super unhappy with what I got.</p>
<hr>
<h3>What problems am I solving and how?</h3>
<p><strong>Problem</strong>: Getting a "configured" server from a hosting provider is expensive and clunky</p>
<p><strong>Solution</strong>:</p>
<ul>
<li>Run servers in your own cloud!</li>
<li>Have all the custom maps and plugins needed preloaded on the server, no extra configuring required</li>
</ul>
<p> </p>
<p><strong>Problem</strong>: Running servers 24/7 is expensive and unnecessary</p>
<p><strong>Solution</strong>:</p>
<ul>
<li>Make it easy for users to provision servers on an ad-hoc basis</li>
<li>We still want people to be able to have a server when they need it</li>
<li>Servers will shut themselves down when no longer in use.</li>
<li>Installing monitoring software to optimize hardware and actual usage</li>
</ul>
<p> </p>
<p><strong>Problem</strong>: Configuring servers is slow; even when automated</p>
<p><strong>Solution</strong>:</p>
<ul>
<li>Do this once and be able to deploy a LOT of identically configured systems</li>
<li>Follow the idea of a baked image</li>
<li>Allow server to come up with a few dynamic details (passwords, hostname, etc)</li>
</ul>
<p> </p>
<p><strong>Problem</strong>: Sometimes multiple people want a server at the same time</p>
<p><strong>Solution</strong>:</p>
<ul>
<li>The ability to ask for servers ad-hoc means that I can host many servers at once and it would still be cheaper than running a single server 24/7 so long as they don't run ALL the time</li>
<li>Allow users to self service. Give them a simple menu to set the map, config, and item whitelist</li>
</ul>
<p> </p>
<p><strong>Problem</strong>: Players like to understand their in-game performance</p>
<p><strong>Solution</strong>:</p>
<ul>
<li>Record and upload player stats and game recordings to known sites (<a href="http://demos.tf/">Demos.tf</a> &amp; <a href="http://logs.tf/">Logs.tf</a>)</li>
<li>Some leagues also <em>require</em> recordings, so this makes it certain you will have a high quality copy of the match</li>
</ul>
<p> </p>
<p><strong>Problem</strong>: Servers get hacked or DDoS'd</p>
<p><strong>Solution</strong>:</p>
<ul>
<li>Do basic sever hardening (no ssh access, lock down source process, use random passwords, etc)</li>
<li>Put it in a network that has a high degree of fault tolerance</li>
<li>Put up stateful firewalls to block script kiddies</li>
<li>Set up kernel flags to mitigate common DoS attacks</li>
<li>Monitoring system should alert when events like this happen</li>
<li>Be able to just make a new server so now the hacker has to find all that info again</li>
</ul>
<p> </p>
<p><strong>Problem</strong>: Writing web UI's is time consuming and requires users to go a website</p>
<p><strong>Solution</strong>:</p>
<ul>
<li>Integrate with chat services (Discord) or be where players congregate the most</li>
<li>Basically, bring the solution to where users already are</li>
</ul>
<hr>
<h3>Result</h3>
<p>What I have now is the ability to summon a fully configured Team Fortress 2 server that I don't even need to be around to allow games to happen on.</p>
<h4 id="ansible">Ansible</h4>
<p>Basically I'm creating bootable images that can be turned into VM's very quickly. This uses a tool I already know from working as a System Administrator; <a href="https://www.ansible.com/">Ansible</a>. Using this technique makes it so I can boot a virtual machine get a working TF2 in ~2 minutes; which is remarkably fast, plus most users are quite happy to wait if it means a well configured high performance server they can frag on. These servers are setup to gracefully shutdown when no one is using it anymore.</p>
<p><em>Source code</em>: <a href="https://github.com/scrims-tf/provisioners">scrims-tf/provisioners</a></p>
<p> </p>
<h4 id="discord-bot-integration">Discord Bot integration</h4>
<p>I go a step further to enabling my Discord bot to respond to requests for a server. Not only that but it will give the user very useful information about the server and how to use it. Putting the docs right in front of them. Of course I'm using my own <a href="https://github.com/ns-phennessy/Arcbot">Discord bot library</a> for this.</p>
<figure class="post__image"><img loading="lazy"  src="https://patcave.me/media/posts/1/serveme-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://patcave.me/media/posts/1/responsive/serveme-2-xs.png 300w ,https://patcave.me/media/posts/1/responsive/serveme-2-sm.png 480w ,https://patcave.me/media/posts/1/responsive/serveme-2-md.png 768w ,https://patcave.me/media/posts/1/responsive/serveme-2-lg.png 1024w ,https://patcave.me/media/posts/1/responsive/serveme-2-xl.png 1360w ,https://patcave.me/media/posts/1/responsive/serveme-2-2xl.png 1600w"  alt="" width="979" height="490"></figure>
<p><em>Source code</em>: <a href="https://github.com/scrims-tf/discord-bot-plugins">scrims-tf/discord-bot-plugins</a></p>
<p> </p>
<h4 id="monitoring">Monitoring</h4>
<p>Not only <em>that</em>; but it also automatically sends data to my <a href="https://www.influxdata.com/time-series-platform/">monitoring stack</a></p>
<figure class="post__image"><img loading="lazy"  src="https://patcave.me/media/posts/1/tf2mon.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://patcave.me/media/posts/1/responsive/tf2mon-xs.png 300w ,https://patcave.me/media/posts/1/responsive/tf2mon-sm.png 480w ,https://patcave.me/media/posts/1/responsive/tf2mon-md.png 768w ,https://patcave.me/media/posts/1/responsive/tf2mon-lg.png 1024w ,https://patcave.me/media/posts/1/responsive/tf2mon-xl.png 1360w ,https://patcave.me/media/posts/1/responsive/tf2mon-2xl.png 1600w"  alt="" width="1324" height="683"></figure>
<p>My monitoring stack will send me alerts (also in Discord) when..</p>
<ul>
<li>High player count</li>
<li>High network bandwidth</li>
<li>High CPU / RAM usage</li>
<li>Server is older than a threshold (why is it hanging??)</li>
</ul>
<p>I can now also pull data out of my monitoring to optimize cost or understand how my servers operate.</p>
<p>I also really should automate creating my monitoring...</p>
<p> </p>
<h4 id="supporting-infrastructure">Supporting Infrastructure</h4>
<p>Not only <em>that</em>; but I went even further as to automate the actual network the systems live in. This allowed me to work with a new tool <a href="http://terraform.io/">Terraform</a>. This means that I can make lots of changes to all of this very easily. Basically able to re-create all of this if I want (say if I want to use Google's free trial over and over).</p>
<p><em>Source code</em>: <a href="https://github.com/scrims-tf/infrastructure">scrims-tf/infrastructure</a></p>
<p>I decided to put this on Google's cloud network. Mostly because I wanted to get my hands on and see if my distaste for AWS was because Amazon sucks and is the grass greener on the other side. So far, I've had a very positive experience with GCP, though some features are lacking like VPC-enabled databases. A side effect I didn't expect is that putting it on Google's network has lowered user ping on average for the players of the server. This is because Google has highly optimized their networks to enter their backbone much closer to the player's location; avoid a lot of the suboptimal routing that ISP's do with <a href="https://en.wikipedia.org/wiki/Border_Gateway_Protocol">BGP</a>.</p>
<p> </p>
<h4 id="custom-server-mods">Custom Server Mods</h4>
<p>I've had to also write a handful of mods for the server to allow some of this to happen. I do have to say that I'm thoroughly impressed by the modding community. A group of volunteers have been able to embed a working Python3.6 interpreter into the Source Engine, <strong><em>AND</em></strong> it doesn't suffer from a lot of the slowness usually associated with interpreted languages.</p>
<p><em>Source code</em>: <a href="https://github.com/scrims-tf/sourcemod-plugins">scrims-tf/sourcemod-plugins</a> and <a href="https://github.com/scrims-tf/sourcepython-plugins">scrims-tf/sourcepython-plugins</a></p>
<hr>
<h1 id="future-plans">Future Plans</h1>
<p>Automate more things! I want to play with the idea of extending the player stats logging to include not only more information but way more advanced ability to view that information. Maybe even work with some of my data science friends to derive cool insights. Player progression over time and maybe even something like an <a href="https://dota2.gamepedia.com/Matchmaking_Rating">MMR</a> or try to guess their skill division.</p>
<p>I also want to play with the idea of having the <a href="https://developer.valvesoftware.com/wiki/SourceTV">SourceTV</a> camera directed by machine learning. How awesome would it be to have a computer know and show you where the big moments are. Basically can follow the action in the game so viewers can just sit back and watch as if a crew was doing all of it.</p>
<p>Add some feature to make the "pick up game" (pug) experience better. MMR for players to try to balance teams. Ability to just randomize teams. Ability to have a 2 captains pick players and assign them to teams.</p>
<p>Offer this as a cheap paid service for the Team Fortress community in general. Not sure how much I would charge per month; not looking to get rich or anything; but make my hosting costs into nothing.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>What I learned from making a Python chatbot</title>
        <author>
            <name>Patrick Hennessy</name>
        </author>
        <link href="https://patcave.me/what-i-learned-from-making-a-python-chatbot/"/>
        <id>https://patcave.me/what-i-learned-from-making-a-python-chatbot/</id>
            <category term="Programming Stuff"/>

        <updated>2022-01-25T22:12:10-07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://patcave.me/media/posts/2/cover-1.png" alt="" />
                    Lately I've been reading and hearing a lot about Chat Ops. It's a practice started by Github which uses a chat service like Hipchat or Slack with a bot user to provide feedback and insights into their infrastructure. This is super cool because it allows for transparency in to what&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://patcave.me/media/posts/2/cover-1.png" alt="" />
                <p dir="auto">Lately I've been reading and hearing a lot about <a href="https://www.pagerduty.com/blog/what-is-chatops/" rel="nofollow">Chat Ops</a>. It's a practice started by Github which uses a chat service like <em>Hipchat</em> or <em>Slack</em> with a bot user to provide feedback and insights into their infrastructure.</p>
<p dir="auto">This is super cool because it allows for transparency in to what you're doing at any given time. Very useful in a high stress situation, like a big production failure where multiple engineers are trying to fix it; they can easily coordinate their efforts and not have to tell everyone what they're doing right that second because everyone can see it.</p>
<p dir="auto"> </p>
<h2 dir="auto">Motivations</h2>
<p dir="auto">When I was younger, I played in the early days of <strong>Starcraft 1</strong> and <strong>Diablo II</strong>. To play online; you had an IRC like client called Battle.Net, and there were bots galore. Thanks to our collective knowledge; the clan I was in at the time, we became the top clan in Diablo. One of the services we ran was a trivia bot, which is half the reason people came to our channel. The other was the exp runs they could get from it.</p>
<p dir="auto">Ever since getting on these modern chat services, I wanted a bot that I built entirely on my own. So my initial idea was to build a trivia bot. It used webhooks; and I did everything synchronously with some simple HTTP-server library. It worked; but was far from an ideal implementation.</p>
<p dir="auto">But I did have an awesome name for it: <em><strong>Regis Philbot</strong></em>, after the infamous Who Want's to be a Millionaire host; so of course I wanted to make the bot as cool as the name.</p>
<p dir="auto"> </p>
<h2 dir="auto">The first iteration</h2>
<p dir="auto">While there were many bots already out there; I wanted the challenge of building it myself from scratch. I made the decision to use Python, which I was still sort of new to at the time (but so glad I did).</p>
<p dir="auto">My initial design was poor; not thought out at all. I guess I just wanted to see if I could even get it to work at all. I did get it working; but it was very buggy and unstable.</p>
<p dir="auto">I had started using <a href="http://discordapp.com/" rel="nofollow">Discord</a> chat / voice service for some of my gaming friends and I, and I wanted to get a bot in there to have fun with. So started rewriting the bot from scratch and began the process of reverse engineering the Discord API. (This was fairly easy since Discord is a web based client)</p>
<p dir="auto"> </p>
<h2 dir="auto">Super Object Oriented Python Master Race</h2>
<p dir="auto">I didn't have the whole design in my head when I started; but my goal was to create a simple to use API for plugins, so that you can write a plugin that does stuff. To facilitate this; I started with a <code>Core</code> object.</p>
<h3 dir="auto">Core</h3>
<p dir="auto">In <a href="https://en.wikipedia.org/wiki/Object-oriented_programming" rel="nofollow">object oriented programming</a> terms, the <code>Core</code> uses <em>composition</em>. So then the question is; what things should the core allow us to do?</p>
<p dir="auto">Heres what I came up with:</p>
<ul dir="auto">
<li>Connect / Disconnect to chat service</li>
<li>Manage the Bot config</li>
<li>Handle plugins</li>
<li>Broker events</li>
</ul>
<h3 dir="auto">Connector</h3>
<p dir="auto">The connector class is the bot's interface to the chat service; in this case, I was using <a href="https://discordapp.com/" rel="nofollow">Discord</a>.</p>
<p dir="auto">This class was a good opportunity to use an <strong><a href="https://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)" rel="nofollow">interface</a></strong>. So then we ask; what does the bot need to be able to do with the chat service? What things are common operations among all modern chat services?</p>
<p dir="auto">I created a number of methods to abstract this:</p>
<div class="highlight highlight-source-python position-relative overflow-auto">
<pre><span class="pl-s1">connector</span>.<span class="pl-en">say</span>()                 <span class="pl-c"># Says something in a chat channel</span>
<span class="pl-s1">connector</span>.<span class="pl-en">reply</span>()               <span class="pl-c"># Replies to a user who invoked a command</span>
<span class="pl-s1">connector</span>.<span class="pl-en">whisper</span>()             <span class="pl-c"># Uses private messaging with the user</span>
<span class="pl-s1">connector</span>.<span class="pl-en">getUser</span>()             <span class="pl-c"># Get data about a specific user</span>
<span class="pl-s1">connector</span>.<span class="pl-en">getChannel</span>()          <span class="pl-c"># Get data about a particular channel</span>
<span class="pl-s1">connector</span>.<span class="pl-en">upload</span>()              <span class="pl-c"># Upload a file to the server</span></pre>
</div>
<p dir="auto">The tricky part was going to be how I could make the bot <em>recieve</em> messages as well. This ended up being a <a href="https://docs.python.org/3.5/library/threading.html" rel="nofollow">thread</a> that just listens on a <a href="https://docs.python.org/3.5/library/socket.html" rel="nofollow">socket</a> for new messages.</p>
<p dir="auto">It was at this point I started hitting a lot of problems with the socket; websocket; and requests libraries. It got really wonky trying to use <a href="https://en.wikipedia.org/wiki/Transport_Layer_Security" rel="nofollow">SSL</a> in Python 2.7, so I was forced to upgrade to Python 3.</p>
<p dir="auto">So now this <em>""message consumer""</em> thread would need to actually produce messages in a way the bot can understand and notify the bot that it has received a message. The first iteration of the system was poor; and it was already showing performance issues since this one thread was literally doing all the bot logic. <strong>Bad bad bad</strong></p>
<h3 dir="auto">Going Multi threaded</h3>
<p dir="auto">I has read that you can get considerable performance gains by using <a href="https://en.wikipedia.org/wiki/Thread_pool" rel="nofollow">thread pooling</a>. I could get away with this since I don't have to ensure that the bot does things in a 100% FIFO manner. I also thought that; what if a plugin is waiting on an HTTP response from an API? In a single threaded system; he would just be sitting there and no one could interact with it until that request returned. A bot isn't a <a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop" rel="nofollow">REPL</a> interface per-say.</p>
<p dir="auto">So now I had to make a class to handle my pool of threads; and I had <em>never</em> done any meaningful threaded programming before this.</p>
<p dir="auto">Python makes this stupidly simple, it has a FIFO queue library that blocks when dequeueing an item. This just means that more than one thread can't take something from the queue at the same time as another. So then it was just as simple as creating a generic <code>worker</code> class that would run any function you give it. Python even makes this easy because functions are <a href="https://en.wikipedia.org/wiki/First-class_function" rel="nofollow">first class citizens.</a></p>
<p dir="auto">Awesome! I just learned a lot about threading and how the OS handles blocking; plus now my bot can be working on many things at once.</p>
<h3 dir="auto">Plugin System</h3>
<p dir="auto">This is where things got super <em>""meta""</em>.</p>
<p dir="auto">I wanted to be able to 'sandbox' plugins from each other; and be able to unload them. Once again, Python allows you do some cool things like dynamically linking code modules at runtime.</p>
<p dir="auto">I needed a way to manage these plugins. This led to me making a bunch of classes.</p>
<ul dir="auto">
<li>Plugin Superclass</li>
<li>Plugin Manager</li>
<li>Command Manager</li>
<li>Event Manager</li>
<li>Decorators (Oh god no)</li>
</ul>
<p dir="auto">So obviously; the Plugin manager is what handles the plugins themselves; Loading, unloading, and tracking their loaded instances.</p>
<p dir="auto">Python has this thing called <em>metaprogramming</em>; which allows you to mess with parts of methods and classes. Under the hood; everything is just a <code>dict</code> object. You can abuse this by piggy backing on it to pass information around.</p>
<p dir="auto">This is when I wrote my first decorator. What it does it set flags on a method to say that it is a command; and here is how it is invoked. I could now abstract this from the plugin so the manager could know that this is intended to be a command.</p>
<p dir="auto">Theres a problem that happens tho; if you hit an exception in a plugin; that threaded worker is now dead. Shit.</p>
<p dir="auto">So I had to make it so the workers would throw the exception but keep going.</p>
<p dir="auto"> </p>
<h2 dir="auto">Tying everything together</h2>
<p dir="auto">The glue that makes the bot work really lies in the <code>message consumer</code> thread; which resides in the connector. When it encounters a message from the socket; it queue's up for a threaded worker to pick up, and this worker will check to see if this message is something the bot should respond to.</p>
<h3 dir="auto">Gravy features</h3>
<p dir="auto">Getting the core functionality done felt pretty good. The plugin syntax was simple and everything worked very well together; but I felt very limited in what my plugin could do.</p>
<h4 dir="auto">Persistance</h4>
<p dir="auto">This was a tough one; I figured I wanted to use an <a href="https://en.wikipedia.org/wiki/Object-relational_mapping" rel="nofollow">ORM</a>, which basically allows you to use SQL as if it were Python code.</p>
<p dir="auto">The elephant in the room is <a href="http://www.sqlalchemy.org/" rel="nofollow">SQL Alchemy</a>, being that it is the most popular standalone ORM for Python. When I investigated it; I found it very clunky and really didn't like it. I considered a few other options until stumbling on <a href="http://docs.peewee-orm.com/en/latest/" rel="nofollow">PeeWee</a>; which is an extremely lightweight ORM. It had everything I needed without all the fluff.</p>
<p dir="auto">I abstracted it out a bit; plugins getting their own database file; as well as automatically setting up the database tables and a key value store for them behind the scenes. The less plugin code I have to write; the better.</p>
<h4 dir="auto">Access Control</h4>
<p dir="auto">This depended on persistence obviously; but I quickly found it tedious to have people being able to run any command on my bot. There was no way to restrict who could do what.</p>
<p dir="auto">I setup ACL's so that each user gets an 'access' rank, -1 to 999. You then specify in your plugins how much access is required to use a particular command. So now I have a <code>banhammer</code> command; which only I can use.</p>
<p dir="auto"> </p>
<h2 dir="auto">Challenges</h2>
<p dir="auto">There were a lot of gotchas that I fell into; and looks like a lot of Python programmers fall victim to them as well.</p>
<p dir="auto">I had to do some digging; but it turns out that Python's <code>thread</code> library is deprecated, and you're supposed to use the <code>threading</code> library instead. Super confusing.</p>
<p dir="auto">I had the same problem with the websocket library too though; there is a socket library, and several unofficial websocket libraries. The ones I looked at couldn't connect to my Slack server, and they were really clunky to use; but I found someone who was making something similar use a obscure websocket library which works extremely well. (Thank god)</p>
<p dir="auto"> </p>
<h2 dir="auto">What I learned</h2>
<p dir="auto">Overall; it has been a good experience. It caused me to touch many many aspects of Python; and get experience with using all these features together.</p>
<p dir="auto">The thread pool class had me dig into Python's <code>threading</code> library. I learned about the best practices for starting, managing and stopping threads; as well as design considerations.</p>
<p dir="auto">The other classes were more for organization and sanity; but I learned about <a href="http://www.secnetix.de/olli/Python/list_comprehensions.hawk" rel="nofollow">list comprehension</a> as well as iterators and iterables. Though I prefer using more explicit code for doing list operations.</p>
<p dir="auto">I also found out that there is official support for Java-like class declarations. You can create an abstract class, define getters and setters, method overloading, calling the super constructor, etc. Though in Python, it looks very odd in my opinion.</p>
<p dir="auto">My pub/sub system for events allowed me to learn about how functions/methods are treated on the same level as an <code>int</code>, and that there is a buttload of meta classes attached to each function callback, which can tell me things about it. I also played with decorators quite a bit. An interesting little syntactic sugar for Python; I thought it could simplify my plugin system even further, however I couldn't quite figure out how to make it work how I wanted it.</p>
<p dir="auto">When implementing my <code>help</code> command in my basic chat plugin; I learned about the <code>__docstring__</code> meta tag, so I could have my code documented in line. Fantastic.</p>
<p dir="auto"> </p>
<h2 dir="auto">In Summation...</h2>
<p dir="auto">For anyone who doesn't do random hacking projects like this; I highly recommend it. I touched quite a bit of Python's breadth and learned a hell of a lot about how everything works in the language.</p>
<p dir="auto">Most of all, the bot works! Sure, it's not perfect, there are some tweaks that it still needs; like more error handling, edge-case things, etc. But at this point; I would consider it stable enough to run it on my Discord server.","</p>
<p dir="auto">Lately I've been reading and hearing a lot about Chat Ops. It's essentially a DevOp's practice started by <strong>Github</strong> which uses a chat service like <em>Hipchat</em> or <em>Slack</em> with a bot user to manage their team and infrastructure.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Graduation!</title>
        <author>
            <name>Patrick Hennessy</name>
        </author>
        <link href="https://patcave.me/graduation/"/>
        <id>https://patcave.me/graduation/</id>

        <updated>2022-01-25T22:48:34-07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://patcave.me/media/posts/6/Columns_Jesse-10.jpg" alt="" />
                    Today is the day I graduate from college! I think there is no better time to reflect on my college journey. When I graduated high school, I didn't know what I wanted to do; or where I wanted to go. I felt rather lost; and&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://patcave.me/media/posts/6/Columns_Jesse-10.jpg" alt="" />
                <p>Today is the day I graduate from college! I think there is no better time to reflect on my college journey.</p>
<p><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">When I graduated high school, I didn't know what I wanted to do; or where I wanted to go. I felt rather lost; and it seemed like everyone else had a solid plan.</span></p>
<div>
<div> </div>
<div>How was everyone else so sure? Everyone talked about their future plans with such certainty. It blew my mind because; I knew myself that there is no way I could ever be that certain. It turns out that mostly everyone ended up changing their minds and going down as many different paths as me.</div>
<br>
<div>I figured it would just come to me after exposing myself to different things at a college, so I started up college immediately after high school. I had no idea that I would be embarking on quite an interesting journey.</div>
<div><hr></div>
<div>
<h2>Freshman year at UCM</h2>
<div>I spent my freshman year at the <a href="https://www.ucmo.edu/">University of Central Missouri</a>.</div>
<div> <figure class="post__image post__image--right"><img loading="lazy"  src="https://patcave.me/media/posts/6//Central_Missouri_Athletics_logo.svg.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://patcave.me/media/posts/6//responsive/Central_Missouri_Athletics_logo.svg-xs.png 300w ,https://patcave.me/media/posts/6//responsive/Central_Missouri_Athletics_logo.svg-sm.png 480w ,https://patcave.me/media/posts/6//responsive/Central_Missouri_Athletics_logo.svg-md.png 768w ,https://patcave.me/media/posts/6//responsive/Central_Missouri_Athletics_logo.svg-lg.png 1024w ,https://patcave.me/media/posts/6//responsive/Central_Missouri_Athletics_logo.svg-xl.png 1360w ,https://patcave.me/media/posts/6//responsive/Central_Missouri_Athletics_logo.svg-2xl.png 1600w"  alt="" width="311" height="223"></figure></div>
<div>I'll be honest, I hated it there. I wanted to go to college to learn something but my peers were way more obsessed with drinking and partying. The majority of my professors could care less about students. There were so many reasons I felt like I didn't belong; and I questioned if college was for me.</div>
<br>
<div>I walked away from UCM with hardly anything of value. There wasn't anything really ground-breaking I learned there, it basically felt like a re-hash of high school.</div>
<br>
<div>I did marching band there because I had enjoyed it in high school, but it really was just unnecessary stress.</div>
<div> </div>
<div>I was running a lot too; I had grown to love running in high school with cross country. It became a way for my to relieve stress and have a time away from everyone. Being an introverted freshmen can be a bit difficult. I basically spent my large amount of free time that year either gaming or running. My classes were so easy that I didn't study very much if at all.</div>
<br>
<div>I thought that, if this is all that college is, then why am I even going? I made the decision to drop out until I could figure things out for myself.</div>
<div><hr></div>
<div>
<h2>Life as a dropout</h2>
<div>
<div>Of course, everyone in my life was judging me for leaving college, but I didn't care. I dropped out for good reasons. It was a nice break; and to this day I'm very glad I did it.</div>
<br>
<div>I worked a few jobs during this break. I worked as a deli clerk, at a doughnut shop, but probably my favorite gig I had was working as a waiter at weddings. I would only have to work once a week. The owners were super nice and made it a lot of fun. I got to see a lot of weddings and drunken toasts. The best part was we got to eat as much of the left overs that we could manage.</div>
<br>
<div>I took some online classes in nutrition during this break, something I've always been interested in, and something I wanted some more formal understanding of. There was a point that I thought I would become a nutritionist, or dietitian. After about eight months; I began to realize that almost everything I was learning was really subjective and that there are few things about the field that are concrete. I didn't feel like I knew anything because everything I was learning had lots of other sources that contradicted it. It's so hard to know what to believe in that field. I concluded that we just don't really know how to eat well or be healthy. We have some vague idea but that is not concrete enough for me; certainly not enough to build a career around.</div>
<br>
<div>I decided around May of that year that I wanted to back to school but I was too late to apply by that time, so I just tabled the decision. In the meantime I was still working and doing my thing.</div>
<br>
<div>On my 21st birthday, my girlfriend at the time broke up with me because she thought I was a loser and thought frat guys were way cool. I find out later she slept with some random dude not even a week after she left for college, before we even broke up. I did not see that coming at all; at that time, we had been dating for about a year and everything was great so far as I knew. A few days later, I got fired from the deli because of something I didn't even do; and on top of that I had an extremely painful and debilitating medical condition arise. And because I got fired, my mom was on the verge of kicking me out of the house for "being too lazy". It all came out of nowhere and I was definitely not ready for it.</div>
<div> </div>
<div>At this point in my life; I really didn't think very highly of myself and saying I was depressed is an understatement; I probably had the worst 21st birthday you could have. When I took stock of my life; I realized that I didn't have a support network. My family has never been supportive in any way and my "friends" all vanished when I needed them most. It became abundantly clear to me that what I was doing was not working and that if things were going to get better it was going to be a result of me taking action.</div>
<br>
<div>As depressed as I was, all this actually made me want to go back to school even more. I had heard a lot of good things about Mizzou from various people; so I figured it was a solid choice. It was close to home, a big school with a lot of social life things to do and it sounded like it would be a lot of fun. It would be a way I could get away from all the bullshit. I needed to change and this was a huge step towards doing so. I applied to Mizzou that fall and got accepted at the beginning of December.</div>
<br>
<div>On the upside of all this, with the free time I had; I really got into programming. I had been a gamer for a long time; and I was playing a lot of Diablo 2 at the time. I learned programming almost out of necessity because I wanted to have a Diablo 2 bot do cool things and improve it's behavior. I reverse engineered the bot API and taught myself JavaScript in about a week. I wrote a lot of really fun scripts that allowed our Guild to become the top on BattleNet; and I very quickly became an expert on how to use the bot. It was a great project to work on to get my hands dirty with software.</div>
<div><hr></div>
</div>
<div>
<h2>Starting at Mizzou</h2>
<figure class="post__image post__image--left"><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);"><img loading="lazy"  src="https://patcave.me/media/posts/6//1200px-Missouri_Tigers_logo.svg.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://patcave.me/media/posts/6//responsive/1200px-Missouri_Tigers_logo.svg-xs.png 300w ,https://patcave.me/media/posts/6//responsive/1200px-Missouri_Tigers_logo.svg-sm.png 480w ,https://patcave.me/media/posts/6//responsive/1200px-Missouri_Tigers_logo.svg-md.png 768w ,https://patcave.me/media/posts/6//responsive/1200px-Missouri_Tigers_logo.svg-lg.png 1024w ,https://patcave.me/media/posts/6//responsive/1200px-Missouri_Tigers_logo.svg-xl.png 1360w ,https://patcave.me/media/posts/6//responsive/1200px-Missouri_Tigers_logo.svg-2xl.png 1600w"  alt="" width="318" height="181"></figure>I started school again in that January. </span><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">Mizzou requires transfer students to declare a major and again I was like how am I going to be sure? I figured that since I was able to teach myself programming, I would have a taste of that major for a while; I planned to revisit the idea down the road after a few classes. </span></p>
<p><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">I declared myself a computer science major; and honestly, my initial motivation for being CS had nothing to do with career prospects or money or anything like that. It was just so I could enhance my gaming life like I had done before. There was a lot of cool hacks that I had seen or used, but didn't have the knowledge to know how they worked and I really wanted to know how that all worked.</span></p>
<div><br>
<div>The first 2 classes I took; we didn't really learn a lot of new groundbreaking ideas for me; and I craved more knowledge, so I started learning things outside of class just for fun. I fully embraced my own curiosity and ability to teach myself. I learned a great deal of self efficacy from that. I kept writing new scripts for my bot; but also got into the web stack. I learned some HTML and CSS and played with that a lot. I also started learning about networking so I could come up with a way to prevent the IP blacklisting that happened when Blizzard thought you were botting.</div>
<br>
<div>I also got into the social life at Mizzou quite a bit. Being 21, I could go out to the bars and there was always something to do; though I still really didn't feel like I fit in there. A lot of the times I was out 'partying' I really just wished I was home doing one of my nerdy hobbies.</div>
<div><hr></div>
</div>
</div>
<h2>Computer Science major</h2>
<div>
<div>There was a distinct point when everything just suddenly made sense for me; and I really understood how computer systems work.</div>
<div> </div>
<div>I took a class called "Unix OS", where we learned how the Unix file system works and how to use basic commands as well as how the operating system works on a deeper level. After about a month in that class, light bulbs turning on for me everywhere, I installed Linux on my laptop and used that for the rest of college. Living in a Linux environment; and all the information about it on the internet, allowed me to understand every little bit about the operating system that I could. A lot of the things about Linux are applicable to all systems.</div>
<br>
<div>It was at this point I was absolutely sure I wouldn't be changing my major again; it felt right. I was much more confident in myself and my abilities. That, and I started looking at my career prospects as a CS major and was dumbfounded by how in-demand software engineers are and how much they get paid.</div>
<br>
<div>One of the things about that class I really loved was how our professor would rather you be a self-learner, and didn't really grade harshly for not following an arbitrary set of rules. The class was more focused on fostering the students desire to explore. We would have an assignment; but it was for completion; and if you could demonstrate that you learned something you didn't know before. I had a few more classes like that, and looking back at it; those are the areas in my major that I'm strongest at. Big shout out to Matt Dickenson, defiantly my favorite professor at Mizzou.</div>
<div><hr></div>
<h2>ACM &amp; Cyber Security SIG</h2>
<div>
<div>From the get-go at Mizzou, I got involved with the ACM. I attended the meetings and went to a few workshops but was never as involved as I would've liked. I didn't know anyone and didn't know that such a thing as a SIG (special interest group). There was one semester that they had elected new leadership and kickstarted a lot of new things.</div>
<br>
<div>Out of the handful of existing SIGs, I gravitated towards the cyber security one. Not many people stuck around after the first meeting, so myself and one of my classmates basically were now leading it. I had next to no knowledge of security prior to this so being it's "leader" felt very much like imposter syndrome. But we ended up doing a lot of really cool things and messed with things you would never see in class.</div>
<br>
<div>I think at one point we were the largest and most active SIG; which is pretty awesome. We taught each other stuff and discussed cyber security news and shared interesting tidbits of things we saw out in the wild or elsewhere. It was a lot of fun and I got to meet a lot of cool people in the process. It's also been very beneficial to other areas of my computing knowledge; since security is everywhere, and to be able to understand some of the sophisticated attacks; you are forced to know a lot about all of the individual parts.</div>
<br>
<div>ACM was a great organization to join. I got to meet so many cool people and it was a place that I fit in very well. We did all kinds of fun things and everyone was super helpful. They even hosted a hackathon which for me was like a party. A whole weekend of engineers tinkering with new and interesting things, junk food galore, all nighters; sign me up!</div>
<div><hr></div>
<h2>Internship at Carfax</h2>
<figure class="post__image post__image--left"><img loading="lazy"  src="https://patcave.me/media/posts/6/CarFax-Vehicle-History-Report.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://patcave.me/media/posts/6/responsive/CarFax-Vehicle-History-Report-xs.png 300w ,https://patcave.me/media/posts/6/responsive/CarFax-Vehicle-History-Report-sm.png 480w ,https://patcave.me/media/posts/6/responsive/CarFax-Vehicle-History-Report-md.png 768w ,https://patcave.me/media/posts/6/responsive/CarFax-Vehicle-History-Report-lg.png 1024w ,https://patcave.me/media/posts/6/responsive/CarFax-Vehicle-History-Report-xl.png 1360w ,https://patcave.me/media/posts/6/responsive/CarFax-Vehicle-History-Report-2xl.png 1600w"  alt="" width="288" height="195"></figure>
<div>
<div>During my junior year, I went out applying for internships.</div>
<div> </div>
<div>I wasn't very confident in my ability to work in a "real" environment. My only non-trivial project was my Diablo bot; not really something a company would find valuable.</div>
<div> </div>
<div>The first time I went to the career fair was quite intimidating. I was afraid that I didn't know enough or that all the time I spent on learning random things was a wasted effort.</div>
<br>
<div>However, to my surprise, almost every recruiter was super nice and genuinely interested in what I had to say. I made myself a list of about 20 employers I wanted to talk to, all by priority of how much I wanted the job. I knew I'd probably stumble on my first few chats, so I picked a company low on my list first. After a handful of awkward conversations and just throwing things at the wall and seeing what sticks; I got the a good idea of what I need to do. So I went right in and talked to the one at the top of my list; Carfax.</div>
<br>
<div>It went great and turns out the recruiter also went to UCM. I remember walking away from that thinking that I totally nailed it. Sure enough; they brought me in for an interview. I stumbled a little bit through their programming part but I must've done something right because they ended up hiring me for the internship that summer.</div>
<br>
<div>I wanted to use this internship as an opportunity to get as much knowledge as I could. Working directly on production code with folks who are much better and more experienced than yourself is an excellent way to learn. I would ask so many questions to try to absorb as much as I could. As far an internships go, it was exactly what I wanted. It was close to my house in Columbia, it was within my skill set, and the work environment is very laid back and fun and I got paid pretty handsomely. It wasn't uncommon to play a game of mario kart in the middle of the day against co-workers.</div>
<br>
<div>At the end of that summer; I was asked if I wanted to stay on part time during my next semester. Hell yes! This was awesome, I could pick up a few extra bucks, and get some more experience.</div>
<br>
<div>As it turns out however; that it was a lot to handle; I was working around 25 hours / week, I had a full class load, I was running the cyber security SIG, I was partaking in the college nightlife, and trying to have a relationship. It got out of hand how little free time I had. It was not unusual for me to get about 3-4 hours of sleep per night. Defiantly the busiest semester of my life, and I really didn't like it because there were so many things I wanted to work on or play with but just simply didn't have the time.</div>
<div><hr></div>
</div>
</div>
<h2>Finally, Graduation!</h2>
<div>
<div><figure class="post__image post__image--left"><img loading="lazy"  src="https://patcave.me/media/posts/6/Why-Do-We-Throw-Graduation-Caps.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://patcave.me/media/posts/6/responsive/Why-Do-We-Throw-Graduation-Caps-xs.png 300w ,https://patcave.me/media/posts/6/responsive/Why-Do-We-Throw-Graduation-Caps-sm.png 480w ,https://patcave.me/media/posts/6/responsive/Why-Do-We-Throw-Graduation-Caps-md.png 768w ,https://patcave.me/media/posts/6/responsive/Why-Do-We-Throw-Graduation-Caps-lg.png 1024w ,https://patcave.me/media/posts/6/responsive/Why-Do-We-Throw-Graduation-Caps-xl.png 1360w ,https://patcave.me/media/posts/6/responsive/Why-Do-We-Throw-Graduation-Caps-2xl.png 1600w"  alt="" width="1200" height="628"></figure>I think that looking back; while I might have spent and extra 2 years to get my degree, it was well worth it. I never would have thought in high school that I would be where I am now; that's for sure.</div>
</div>
<div><br>
<div> </div>
<div>Of the many things I've learned, the most important things I learned from my time since high school was that I should just embrace who I am. There were many times I put too much pressure on myself to make a choice; or times where I didn't think too highly of myself because I let others influence me way more than I should've.</div>
<div> </div>
<div>I found something that I really enjoy learning about and doing. I proved to myself that I am capable of shaping my own reality and affecting positive change into my life.</div>
</div>
</div>
<div> </div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Setting up a secure Linux Server</title>
        <author>
            <name>Patrick Hennessy</name>
        </author>
        <link href="https://patcave.me/setting-up-a-secure-linux-server/"/>
        <id>https://patcave.me/setting-up-a-secure-linux-server/</id>
            <category term="Programming Stuff"/>

        <updated>2022-01-25T21:57:24-07:00</updated>
            <summary>
                <![CDATA[
                    This is not a comprehensive guide; but should get you started and prevent you from getting pwned immediately. Following these small steps will make you a much harder target to compromise, and are probably not worth most hackers time. There are a lot of automated&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p dir="auto">This is not a comprehensive guide; but should get you started and prevent you from getting pwned immediately.</p>
<p dir="auto">Following these small steps will make you a much harder target to compromise, and are probably not worth most hackers time.</p>
<p dir="auto">There are a lot of automated attacks going around and hitting known server cluster IP ranges looking for low hanging fruit and vulnerable servers they can exploit.</p>
<hr>
<h2 dir="auto">Creating a Droplet</h2>
<p dir="auto">DigitalOcean makes it very simple to create a droplet. Once you have an account, create a droplet</p>
<ul dir="auto">
<li><strong>Name</strong>: Name your droplet whatever you want. This will become the <strong>hostname</strong> on the machine itself once it's created.</li>
<li><strong>Size</strong>: Go for the cheapest one. The most it will charge you is $5 / month (a very good deal imo).</li>
<li><strong>Location</strong>: I've found that the New York location is rather slow for me, so I usually opt for the San Francisco location.</li>
<li><strong>Image</strong>: Most people will be comfortable with Ubuntu; so we will select that.</li>
</ul>
<p dir="auto">Also important to note; you should opt for using <a href="https://wiki.ubuntu.com/LTS" rel="nofollow">LTS</a> releases since they're supported for a while.</p>
<hr>
<h2 dir="auto">Login</h2>
<p dir="auto">Once created; DigitalOcean will e-mail you your new login credentials.</p>
<h3 dir="auto">From a Terminal (OSX or Linux)</h3>
<p dir="auto">Open a terminal window and type in the following command:</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>ssh root@ipaddress</pre>
</div>
<p dir="auto">It will prompt for a password; enter the one sent to your email.</p>
<h3 dir="auto">From Putty (Windows)</h3>
<p dir="auto">Download <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html" rel="nofollow">PuTTy</a> if you don't have it already. PuTTy will simulate a terminal session similar to that on a Linux or OSX system.</p>
<p dir="auto">Put in the supplied ip-address in the <code>hostname</code> field, and leave the port on <code>22</code>. Then click connect.</p>
<p dir="auto">You will be prompted for your password; feel free to copy and paste it from the email directly. If you did everything right; you should now be logged into your DigitalOcean node as the root user!</p>
<hr>
<h2 dir="auto">Installing Updates</h2>
<p dir="auto">The first thing you should do is bring all your software up to date.</p>
<p dir="auto">DigitalOcean does pretty well keeping their images up to date; but you want to get in the habit of having the freshest updates to software on your system.</p>
<p dir="auto">Use the following commands:</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>apt-get update
apt-get upgrade</pre>
</div>
<p dir="auto"><strong>update</strong> will hit all the <a href="https://help.ubuntu.com/community/Repositories/Ubuntu" rel="nofollow">Ubuntu repositories</a> and refresh any package names or versions.</p>
<p dir="auto"><strong>upgrade</strong> will upgrade any out of date packages and remove anything that is now unnecessary on your system.</p>
<hr>
<h2 dir="auto">Disabling Root Access</h2>
<p dir="auto">It's a good idea to disable root user logins via SSH. Root is allowed to do literally anything on a system, so it's a dangerous account.</p>
<hr>
<h2 dir="auto">Add an admin (sudo) account</h2>
<p dir="auto">A <strong>sudo</strong> user is a user on a Linux system who as the ability to perform certain root-level operations after a password prompt. <em>You should only give <code>sudo</code> access to users who absolutely need it.</em></p>
<p dir="auto">Use the following command to add a new sudoer:</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>useradd -g sudo -s /bin/bash pat</pre>
</div>
<p dir="auto">It will prompt you for a password and email; put whatever you like there (it can be changed later if desired).</p>
<p dir="auto">Once done; I would <em><strong>highly</strong></em> recommend starting another terminal or PuTTy session and logging in as this user to verify that you're able to login. The last thing you want is to lock yourself out.</p>
<h3 dir="auto">Disable Root Login over SSH</h3>
<p dir="auto">Next you'll need to stop the root user from logging in at all.</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>vim /etc/ssh/sshd_config</pre>
</div>
<p dir="auto">Look for a line that says <code>PermitRootLogin</code> and set it to <code>no</code></p>
<p dir="auto">Then reset the SSH server:</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>systemctl restart sshd</pre>
</div>
<hr>
<h2 dir="auto">Firewall</h2>
<p dir="auto">Another important thing to do is to stop automated port scanning attacks on your server. At the moment, we are only using a single port for our communications, <em>22</em> for SSH. A <a href="http://en.wikipedia.org/wiki/Firewall_%28computing%29" rel="nofollow">firewall</a> can stop other hosts from connecting to those ports, hogging up system resources, and potentially exploiting unknown vulnerabilities.</p>
<p dir="auto">You should tune the rules to your liking, but heres a good <a href="https://gist.github.com/ns-phennessy/5a3b60e41022748f5f68">boilerplate</a> to start from</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>wget https://gist.githubusercontent.com/ns-phennessy/5a3b60e41022748f5f68/raw/e9e96a793dd5668b8568a437e083594318a41c86/Firewall%20Script
chmod +x Firewall<span class="pl-cce">\ </span>Script
sudo bash Firewall<span class="pl-cce">\ </span>Script</pre>
</div>
<p dir="auto">The script will setup sensible defaults and leave port 22 open. <strong>IT IS VERY IMPORTANT TO NEVER CLOSE PORT 22</strong>. You <em>will</em> lock yourself out of your system if you do this.</p>
<hr>
<h2 dir="auto">Fail2Ban</h2>
<p dir="auto"><a href="http://en.wikipedia.org/wiki/Fail2ban" rel="nofollow">Fail2Ban</a> is a <a href="http://en.wikipedia.org/wiki/Daemon_%28computing%29" rel="nofollow">daemon</a> that follows the authentication log and see if any IP address has too many failed login attempts, and temporarily bans them.</p>
<p dir="auto">Install it and setup default config:</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>sudo apt-get install fail2ban
sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local</pre>
</div>
<p dir="auto">You can now go and tweak your jail settings.</p>
<div class="highlight highlight-source-shell position-relative overflow-auto">
<pre>sudo vim /etc/fail2ban/jail.local</pre>
</div>
<p dir="auto">I like to set my <code>bantime</code> ridiculously high but give myself a <code>maxretry</code> of at least 5 over a <code>findtime</code> of about 10 minutes.</p>
<p dir="auto">Remember that the goal is to catch brute force attacks, you need to be aware that your rules will have to reflect the kind of traffic you're seeing. A smart attacker will brute force your system slowly to avoid getting caught up in filters like this one.</p>
<hr>
<h2 dir="auto">Done!</h2>
<p dir="auto">Congrats, you're setup and had your first taste with server security. Hopefully this article has given you some insight into how to setup and maintain a Linux server and not get immediately hacked</p>
            ]]>
        </content>
    </entry>
</feed>
